<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="FB_HADEC2ALTAZ" Id="{adbe57d9-9a23-42f1-9b45-6a2172b8ec42}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_HADEC2ALTAZ
VAR_INPUT
	ha,
	dec,
	lat:	LREAL;
	WS:	BOOL := FALSE;
END_VAR
VAR_OUTPUT
	hor_coord:	S_SkyCoordHorizontal;	// OUTPUT COORD ALT/AZ
END_VAR
VAR
	sh,sd,sl, ch,cd,cl,	x, y, z, radius:	LREAL;
END_VAR
VAR CONSTANT
	d2r :	LREAL := PI/180.0;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[(* source https://idlastro.gsfc.nasa.gov/ftp/pro/astro/hadec2altaz.pro
;+
;  NAME:
;     HADEC2ALTAZ
;  PURPOSE:
;      Converts Hour Angle and Declination to Horizon (alt-az) coordinates.
;  EXPLANATION:
;      Can deal with NCP/SCP singularity.    Intended mainly to be used by
;      program EQ2HOR
;
; CALLING SEQUENCE:
;      HADEC2ALTAZ, ha, dec, lat ,alt ,az [ /WS ]
;
; INPUTS
;     ha -  the local apparent hour angle, in DEGREES, scalar or vector
;     dec -  the local apparent declination, in DEGREES, scalar or vector
;     lat -  the local latitude, in DEGREES, scalar or vector
;
; OUTPUTS
;     alt - the local apparent altitude, in DEGREES.
;     az  - the local apparent azimuth, in DEGREES, all results in double
;           precision
; OPTIONAL KEYWORD INPUT:
;      /WS - Set this keyword for the output azimuth to be measured West from 
;            South.    The default is to measure azimuth East from North.
;
; EXAMPLE:
;     What were the apparent altitude and azimuth of the sun when it transited 
;     the local meridian at Pine Bluff Observatory (Lat=+43.07833 degrees) on 
;     April 21, 2002?   An object transits the local meridian at 0 hour angle.
;     Assume this will happen at roughly 1 PM local time (18:00 UTC).
;
;     IDL> jdcnv, 2002, 4, 21, 18., jd  ; get rough Julian date to determine 
;                                       ;Sun ra, dec.
;     IDL> sunpos, jd, ra, dec
;     IDL> hadec2altaz, 0., dec, 43.078333, alt, az
;
;       ===> Altitude alt = 58.90
;            Azimuth  az = 180.0

; REVISION HISTORY:
;      Written  Chris O'Dell Univ. of Wisconsin-Madison May 2002
;-
*)
sh := SIN(ha*d2r);
ch := COS(ha*d2r);
sd := SIN(dec*d2r);
cd := COS(dec*d2r);
sl := SIN(lat*d2r);
cl := COS(lat*d2r);

x := -ch * cd * sl + sd * cl;
y := -sh * cd;
z := ch * cd * cl + sd * sl;
radius := SQRT(x*x + y*y);

// now get Alt, Az
hor_coord.az := ATAN2(y, x) /d2r;	// was ATAN(y, x)
hor_coord.alt := ATAN2(z, radius) / d2r;

// correct for negative AZ
hor_coord.az := MODABS(hor_coord.az, 360.0);

// convert AZ to West from South, if desired
IF WS THEN 
	hor_coord.az := MODABS(hor_coord.az + 180.0, 360);
END_IF
]]></ST>
    </Implementation>
    <LineIds Name="FB_HADEC2ALTAZ">
      <LineId Id="3" Count="0" />
      <LineId Id="46" Count="40" />
      <LineId Id="4" Count="0" />
      <LineId Id="87" Count="0" />
      <LineId Id="5" Count="22" />
      <LineId Id="2" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>